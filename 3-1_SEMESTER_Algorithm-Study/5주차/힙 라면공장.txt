#include <iostream>    
#include <algorithm>    
#include <vector>    
using namespace std;
int solution(int stock, vector<int> dates, vector<int> supplies, int k) {
    int answer = 0;
    int i=0,currentday=-1;
    vector<int> heap;
    currentday+=stock;
    
    while(currentday<k-1){
    	while(currentday+1>=dates[i]){
    		heap.push_back(supplies[i]);
    		push_heap (heap.begin(),heap.end());
    		i++;
    	}
    	currentday+=heap[0];
    	answer++;
    	pop_heap (heap.begin(),heap.end()); heap.pop_back();
    }

    return answer;
}

int main () {
	  int myints[] = {10,20,30,5,15};
	  std::vector<int> v(myints,myints+5);

	  std::make_heap (v.begin(),v.end());
	  std::cout << "initial max heap   : " << v.front() << '\n';

	  std::pop_heap (v.begin(),v.end()); v.pop_back();
	  for (unsigned i=0; i<v.size(); i++)
	  	    std::cout << ' ' << v[i];

	  	  std::cout << '\n';
	  std::cout << "max heap after pop : " << v.front() << '\n';

	  v.push_back(99); std::push_heap (v.begin(),v.end());
	  std::cout << "max heap after push: " << v.front() << '\n';

	  std::cout << "final sorted range :";
	  for (unsigned i=0; i<v.size(); i++)
	    std::cout << ' ' << v[i];

	  std::cout << '\n';

	  return 0;
	}
