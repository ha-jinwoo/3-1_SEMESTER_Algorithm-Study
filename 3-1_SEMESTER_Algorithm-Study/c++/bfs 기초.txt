#include <string>
#include <vector>
#include <iostream>
#include <queue>
using namespace std;


void bfs(int start,queue <int> q,vector<vector<int>> g,vector <bool> v){

	q.push(start);
	v[start]=1;
	while(!q.empty()){
		int x=q.front();
		q.pop();
		cout<<x<<" ";
		for(int i=0; i<g[x].size();i++){
			int y=g[x][i];
			if(!v[y]){
				q.push(g[x][i]);
				v[y]=1;
			}
		}
	}
}

int main(){
	int n=7;
	queue <int> q;
	vector <int> b;
	vector<vector<int>> g;
	vector <bool> v(n+1,0);
	for(int i=0;i<n+1;i++)g.push_back(b);
	g[1].push_back(2);
	g[2].push_back(1);

	g[1].push_back(3);
	g[3].push_back(1);

	g[2].push_back(3);
	g[3].push_back(2);

	g[2].push_back(4);
	g[4].push_back(2);

	g[2].push_back(5);
	g[5].push_back(2);

	g[3].push_back(6);
	g[6].push_back(3);

	g[3].push_back(7);
	g[7].push_back(3);

	g[4].push_back(5);
	g[5].push_back(4);

	g[6].push_back(7);
	g[7].push_back(6);

	for(int i=0;i<g.size();i++){
		for(int j=0;j<g[i].size();j++)
			cout<<g[i][j]<<" ";
				cout<<endl;
	}

	bfs(1,q,g,v);
	return 0;
}

